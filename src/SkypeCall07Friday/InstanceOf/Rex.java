package SkypeCall07Friday.InstanceOf;

public class Rex extends GermanShepherd {

    // Parametrized constructor ()
    public Rex(int age, String name, String color) {
        super(age, name, color);
    }

    // This is also a Default constructor (although it is better to call it Explicit Constructor, (Явный Конструктор))
    // A default constructor is a special type of constructor that has no parameters.
    // In the Plant, it was automatically generated by the compiler if no constructor is explicitly defined in a class
    // However, in Rex, it calls the constructor of the parent class `GermanShepherd` with specific values
    public Rex() {
        super(777, "Rex", "Brown");
    }

    public String getInnerClassToy() {
        return FavoriteToy.getToyName();
    }


    // private class can only be accessed from within the same class
    // protected class can only be accessed from within the same package or by subclasses of the class
    private class FavoriteToy {
        final static private String toyName = "Max the Robo-Dog";

        public static String getToyName() {
            return toyName;
        }
    }

    // A static nested class is a nested class that can be accessed independently of its outer class,
    // without an instance of the outer class
    static class FavoriteFood {
        final static public String foodName = "Meatballs";
    }

}
